#!/bin/bash
#
#  Design using runabaqus script by D.Savas 
#  Submits batch mode Ansys jobs to the sun grid engine.
#
#  Initial work: August 2011 by DS      
#   Undocumented feature:  -fastdata flag.
#   
#  
help()
{
echo ' THIS COMMAND SUBMITS ANSYS JOBS TO THE SUN GRID ENGINE '
echo ' ------------------------------------------------------ '
echo " Usage:  `basename $0` ansys_inp_file [-time hh:mm:ss][-mem=nn] [-rmem=nn] [-parallel n]"
echo "        [-usefastdata] [-project proj_name] [-mail email_address] [other qsub parameters]"
echo '     Where; '
echo '  ansys_inp_file  is a file containing a series of Ansys commands.'
echo '  -time hh:mm:ss  is the cpu time needed in hours:minutes:seconds, '
echo '                  if not specified 1 hour will be assumed.'
echo '    -mem=nn       is the virtual memory requirement. '
echo '    -rmem=nn      is the real memory requirement. '
echo '    -parallel n   request an n-way parallel ansys job' 
echo '    -gpu		use GPU'
echo '                  Note for GPU users: -mem= must be greater than 18G.'
echo "    -usefastdata  Use /fastdata/$USER as the working directory for temporary files"  
echo "    -project project_name : The job will use a project's allocation." 
echo '    -mail your_email_address  : Job progress report is emailed to you.' 
echo  ' ' 
echo ' As well as time and memory, any other valid qsub parameter can be specified.'
echo '  '
echo ' All parameters except the ansys_inp file are optional.  '
echo  ' '
echo ' Output files created by Ansys take their names from'
echo '  the jobname specified by the user.'
echo ' You will be prompted for a jobname as well as any other' 
echo '   startup parameter you wish to pass to Ansys'
echo 'Example: ' 
echo "   `basename $0` test1.dat -time 00:30:00 -mem 8G -rmem=3G -mail j.bloggs@shef.ac.uk"
echo '  '
echo ' '
}
 
tolower() 
{
     echo "$1" | tr [:upper:] [:lower:]
}

if [ -z $ANSYSROOT ] ; then
   echo " Please use 'module load apps/ansys' command first "
   echo "so as to indicate which version of fluent to use. "
   echo -e " Currently we have the following versions: \n"
   module avail apps/ansys
   exit 1
fi


# check existance of the .inp file

if test -z "$1" ; then
	echo ' '
	echo "**Input ( .dat or .inp) file containing Ansys commands was not specified."
	echo ' '
        help
	exit 1
else 
       if test -r "$1" ; then
# debug           echo " Using file '$2' as Ansys commands file"
           ansyinput="$1"
       else
           echo " Specified Ansys input file '$1' does not exist or is not accesible."
           exit 1
       fi
fi
shift 
#
# below is a template for accessing the keyword parameters.  
#  
# 
time="notset"
mem="6G"
rmem="2G"
mail=" "
subnow="0"
extrapars=" "
numcores="0"
arch=" "
pmethod="NONE"
usefastdata="0" 
gpu="0"
# older method was  ansysjob="/usr/local/bin/ansys145job"

ansysjob="/usr/local/packages6/shef/ansys/batch/ansys${ANSYSVER}job"

project=" "
ansysgpu=" "
echo -e "hello $gpu"
while [ $# -gt 0 ]; do
#  echo $1  
  param=`tolower $1`
  case $param in
    
     -time) time="$2";shift;;

    "-mem="* ) mem=${1:5} ;; 
     -mem |memory ) mem="$2";shift;;
    "-rmem="* ) rmem=${1:6} ;; 
     -rmem | rmem ) rmem="$2";shift;;
     -arch=*) arch="-l arch="${1:6};;
     -arch) arch="-l arch="$2;shift;; 
     -parallel | parallel ) numcores=$2;shift;;
    -project ) project="-P $2 -q $2.q"; if  echo $2 | grep "insigneo" > /dev/null; then project=${project}" -v LM_PROJECT=INSIGNEO_USER"; fi ;shift;;
     -mail | mail ) mail="-m bea -M $2";shift;;
     -nq ) subnow="1";;
     -fastdata ) usefastdata="1" ;;
     -gpu ) gpu="1" ;;
     *) extrapars=${extrapars}" "$1 ;;
  esac
  shift
done
if test "$gpu" = "1"; then
   echo -e 'Use GPU'
   arch="-l arch=intel* -l gpu=1 -P gpu"
   ansysgpu="-acc nvidia"
fi
# debug echo $time
if test "$time" = "notset" ; then
   echo -e '\nTime parameter was not specified. Assuming it to be 8 hour.'

   time="08:00:00"
fi
 
echo -e '\nMaximum real-time for the job (hh:mm:ss) will be :' $time 


if test "${extrapars}" = " " ; then 
   echo " No other qsub parameters requested."
else 
   
   echo "Qsub related parameters specified: $extrapars "
fi
echo -e '\nA Ansys job will execute the commands contained in <' $ansyinput '>' 

 echo -e ' Enter Job Name ( this will be used to name the output files): \c'
     read jn 
echo -e ' For GPU users we recommend specifying here -m parameter which is'
echo -e ' around 15G smaller than the requested memory for the the entire job'  
echo -e ' Enter any other Ansys parameters (For example for 6G of memory enter -m=6000) :\c '

     read others

# for parallel jobs ask if use fastdata for output files
#              also ask if requiring mpi or openmp 
#
#
#  usefastdata="0" 
if test "$numcores" -ne "0" 
    then 
    echo -e " Would you like to use /fastdata/$USER  as your work directory? \c" 
     read answr
     answ=`tolower "$answr"`

     if test "$answ" = "y" -o "$answ" = "ye" -o "$answ" = "yes"   
     then
      usefastdata="1" 
     fi

   
#
# ask if wanting openmp or mpi ....
#  
# 
    if test $numcores -gt 6 
       then
          pmethod="MPI"
       else
          pmethod="OPENMP"
    fi   
    echo    " Recommended method for this $numcores way job is the $pmethod method. "  
    echo -e " Would you like to use the MPI method of parallelization? \c" 
     read answr
     answ=`tolower "$answr"`

     if test "$answ" = "y" -o "$answ" = "ye" -o "$answ" = "yes"   
     then
          pmethod="MPI" 
     else 
          pmethod="OPENMP" 
     fi   

 
fi

  echo -e ' \n\r The command used to submit this job is:'  
  if test "$numcores" -eq "0" 
    then 
    echo -e $arch 
    echo -e  "qsub -j y -l h_rt=$time -l mem=$mem -l rmem=$rmem $project $arch $mail $extrapars $ansysjob $ansyinput $usefastdata -b $others $ansysgpu -j $jn"
  elif test "$pmethod" = "OPENMP"
   then
#  openmp method
     echo " qsub -pe openmp $numcores -j y -l h_rt=$time -l mem=$mem -l rmem=$rmem $project $arch $mail $extrapars $ansysjob $ansyinput $usefastdata -b $others $ansysgpu -dis -np ${numcores} -j $jn " 
  else
#  mpi method .....
     echo -e " qsub -pe openmpi-ib $numcores -l arch=intel* -j y -l h_rt=$time -l mem=$mem -l rmem=$rmem $project $arch $mail $extrapars $ansysjob $ansyinput $usefastdata -b $others $ansysgpu -j $jn "
  fi

#
if test "$subnow" = "0"
 then
    echo -e '\n\r Do you wish to submit this job (Yes/No) ? \c' 
    read answr
    answ=`tolower "$answr"`

    if test "$answ" = "y" -o "$answ" = "ye" -o "$answ" = "yes"   
     then
     subnow="1" 
    fi
fi

if test "$subnow" = "1" 
 then

      if test "$numcores" -eq "0" 
      then  
      qsub -j y -l h_rt=$time -l mem=$mem -l rmem=$rmem $arch $mail $extrapars $ansysjob $ansyinput $usefastdata -b $others $ansysgpu  -j $jn 
      elif test "$pmethod" = "OPENMP"
      then
         others="-dis -np ${numcores} ${others}"
        qsub -pe openmp $numcores -j y -l h_rt=$time -l mem=$mem -l rmem=$rmem $project $arch $mail $extrapars $ansysjob $ansyinput $usefastdata $pmethod $others $ansysgpu -j $jn
      else
       qsub -pe openmpi-ib $numcores -l arch=intel* -j y -l h_rt=$time -l mem=$mem -l rmem=$rmem $project $arch $mail $extrapars $ansysjob $ansyinput $usefastdata $pmethod $others $ansysgpu -j $jn 
     fi
 
# 
  echo " SUBMISSION COMPLETED. "  
  echo -e '\n Use the Qstat command to check the progress of the job.' 
  else
    echo 'Job NOT submitted.....'
  fi


